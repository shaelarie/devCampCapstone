@model MyTrainer.Models.User

@{
    ViewBag.Title = "Edit";
}

<body style="background-color:#d2c5d8;">

<br /><br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>User</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.LoginId)
        @Html.HiddenFor(model => model.Username)
        @Html.HiddenFor(model => model.MealPlanId)
        @Html.HiddenFor(model => model.GoalId)
        @Html.HiddenFor(model => model.DailyCalorieIntake)
        @Html.HiddenFor(model => model.TDEE)
        @Html.HiddenFor(model => model.BMI)
        @Html.HiddenFor(model => model.ProteinIntake)
        @Html.HiddenFor(model => model.FatIntake)
        @Html.HiddenFor(model => model.CarbIntake)
        @Html.HiddenFor(model => model.BMR)
        <div class="form-group">
            @Html.LabelFor(model => model.age, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.age, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.HeightFt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HeightFt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HeightFt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeightIn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HeightIn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HeightIn, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="margin-left:350px; font-weight:bold;">
            <div class="col-md-10">
                Male
                <div class="radio">
                    @Html.RadioButtonFor(model => model.Gender,"Male", new { htmlAttributes = new { @class = "form-control" } })
                    <input checked="checked" id="Gender" name="Gender" type="radio" value="Male" />
                </div>

            </div>
        </div>
        <div class="form-group" style="margin-left:350px; font-weight:bold;">
            <div class="col-md-10">
                Female
                <div class="radio">
                    @Html.RadioButtonFor(model => model.Gender,"Female", new { htmlAttributes = new { @class = "form-control" } })
                    <input id="Gender" name="Gender" type="radio" value="Female" />
                </div>

            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10" style="margin-left:318px; font-weight:bold;">
                How many days a week will you be working out?
                @Html.EditorFor(model => model.WorkoutAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WorkoutAmount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
</body>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
